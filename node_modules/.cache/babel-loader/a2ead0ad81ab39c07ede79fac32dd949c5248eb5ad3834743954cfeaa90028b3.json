{"ast":null,"code":"var _jsxFileName = \"/Users/rijadkasumi/Desktop/CC1/CloudComputingFP/Archive/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./ChatInterface.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [userInput, setUserInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const handleChange = event => {\n    setUserInput(event.target.value);\n    console.log(\"handleChange:\", event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setMessages(prevMessages => [...prevMessages, {\n      type: \"user\",\n      text: userInput\n    }]);\n    const prompt = userInput;\n    const apiKey = \"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\";\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/engines/text-davinci-003/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          prompt,\n          max_tokens: 150,\n          n: 1,\n          stop: null,\n          temperature: 0.5\n        })\n      });\n      const data = await response.json();\n      const aiReply = data.choices[0].text.trim();\n      setMessages(prevMessages => [...prevMessages, {\n        type: \"ai\",\n        text: aiReply\n      }]);\n    } catch (error) {\n      console.error(error);\n    }\n    setUserInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-${message.type}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: userInput,\n        onChange: handleChange,\n        className: styles.textarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.sendMessageButton,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"+vXbx/Nge9+qMRHYnTLWQh28qis=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","ChatInterface","_s","userInput","setUserInput","messages","setMessages","handleChange","event","target","value","console","log","handleSubmit","preventDefault","prevMessages","type","text","prompt","apiKey","response","fetch","method","headers","body","JSON","stringify","max_tokens","n","stop","temperature","data","json","aiReply","choices","trim","error","className","chatContainer","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","textarea","sendMessageButton","_c","$RefreshReg$"],"sources":["/Users/rijadkasumi/Desktop/CC1/CloudComputingFP/Archive/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./ChatInterface.module.css\";\n\nconst ChatInterface = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const handleChange = (event) => {\n    setUserInput(event.target.value);\n    console.log(\"handleChange:\", event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setMessages((prevMessages) => [...prevMessages, { type: \"user\", text: userInput }]);\n  \n    const prompt = userInput;\n    const apiKey = \"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\";\n  \n    try {\n      const response = await fetch(\"https://api.openai.com/v1/engines/text-davinci-003/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify({\n          prompt,\n          max_tokens: 150,\n          n: 1,\n          stop: null,\n          temperature: 0.5,\n        }),\n      });\n  \n      const data = await response.json();\n      const aiReply = data.choices[0].text.trim();\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { type: \"ai\", text: aiReply },\n      ]);\n    } catch (error) {\n      console.error(error);\n    }\n  \n    setUserInput(\"\");\n  };\n  \n\n  return (\n    <div className={styles.chatContainer}>\n      <div>\n        {messages.map((message, index) => (\n          <div key={index} className={`message-${message.type}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={userInput}\n          onChange={handleChange}\n          className={styles.textarea}\n        />\n        <button type=\"submit\" className={styles.sendMessageButton}>\n          Send\n        </button>\n      </form>\n    </div>\n  );\n  \n};\n\nexport default ChatInterface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}